{"version":3,"sources":["components/Filter.tsx","components/Movies.tsx","movieConfig.ts","components/Pagination.tsx","App.tsx","index.tsx"],"names":["Filter","genresList","setGenreFilterId","setCurrentPage","useState","filterByValue","setFilterByValue","showFilterDropDown","setShowFilterDropDown","filterValueRef","useRef","clearSortRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","onClick","map","genre","index","filter","genreObj","name","id","onFilterByItemClick","Movies","movies","movie","title","poster_path","release_date","genre_ids","length","slice","src","alt","includes","movieAPIkey","Pagination","moviesPages","currentPage","page","App","genreFilterId","setGenresList","setMovies","moviesPagesValue","setMoviesPagesValue","error","setError","a","axios","get","response","data","genres","message","getGenres","genreFilterIdValue","results","total_pages","getMovies","i","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ad574c6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\ninterface propsTypes {\n  genresList: { id: number; name: string }[];\n  setGenreFilterId: (id: number | false) => void;\n  setCurrentPage: (page: number) => void;\n}\n\nconst Filter: React.FC<propsTypes> = ({genresList, setGenreFilterId, setCurrentPage}) => {\n  const filterByList = [\"Thriller\", \"Action\", \"Comedy\", \"Adventure\"];\n  const [filterByValue, setFilterByValue] = useState<boolean | string>(false);\n  const [showFilterDropDown, setShowFilterDropDown] = useState(false);\n  const filterValueRef = useRef<HTMLDivElement>(null);\n  const clearSortRef = useRef<HTMLDivElement>(null);\n\n  const onFilterByItemClick = (genre: string | false) => {\n    setCurrentPage(1);\n    setFilterByValue(genre);\n    setShowFilterDropDown(false);\n    setGenreFilterId(\n      genresList.filter((genreObj) => genreObj.name === genre)[0].id\n    );\n  };\n\n  const showFilterDropDownFunc = () => {\n    setShowFilterDropDown(!showFilterDropDown);\n  };\n\n  const clearSort = () => {\n    setCurrentPage(1);\n    setFilterByValue(false);\n    setGenreFilterId(false);\n  };\n\n  const clickOnFilterValue = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    clearSortRef.current && clearSortRef.current.contains(event.target as Node)\n      ? clearSort()\n      : showFilterDropDownFunc();\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (filterValueRef.current)\n        !filterValueRef.current.contains(event.target as Node) &&\n          showFilterDropDown &&\n          setShowFilterDropDown(false);\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, [showFilterDropDown]);\n\n  return (\n    <div className=\"filter-wrap\">\n      <div className=\"filter\">\n        <div\n          className=\"filter__value\"\n          ref={filterValueRef}\n          onClick={clickOnFilterValue}\n        >\n          <span>{filterByValue ? filterByValue : \"Genres\"}</span>\n          {filterByValue && (\n            <div className=\"filter__clear\" ref={clearSortRef}>\n              <div></div>\n              <div></div>\n            </div>\n          )}\n        </div>\n        {showFilterDropDown && (\n          <ul className=\"filter__dropdown\">\n            {filterByList.map((genre, index) => (\n              <li key={genre + index} onClick={() => onFilterByItemClick(genre)}>\n                {genre}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\r\n\r\ninterface PropsTypes {\r\n  movies: Array<any>;\r\n  genresList: { id: number; name: string }[];\r\n}\r\n\r\nconst Movies: React.FC<PropsTypes> = ({ movies, genresList }) => {\r\n  const prePathPoster = \"http://image.tmdb.org/t/p/w92\";\r\n\r\n  return (\r\n    <ul className=\"movies-ul\">\r\n      {movies\r\n        .filter(\r\n          (movie) =>\r\n            movie.title &&\r\n            movie.poster_path &&\r\n            movie.release_date &&\r\n            movie.genre_ids.length\r\n        )\r\n        .slice(0, 10)\r\n        .map((movie, index) => {\r\n          return (\r\n            <li key={movie.title + index} className=\"movie\">\r\n              <div className=\"movie__poster-wrap\">\r\n                <img\r\n                  src={prePathPoster + movie.poster_path}\r\n                  alt=\"movie.title\"\r\n                />\r\n              </div>\r\n              <div className=\"movie__description\">\r\n                <h3 className=\"movie__title\">{movie.title}</h3>\r\n                <p className=\"movie__year\">{movie.release_date}</p>\r\n                <ul className=\"movie__genres\">\r\n                  {genresList\r\n                    .filter((genre) => movie.genre_ids.includes(genre.id))\r\n                    .map((genre) => (\r\n                      <li key={genre.name}>{genre.name}</li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","const movieAPIkey = \"482937fab99813d247db7ea317c5217e\";\r\nexport default movieAPIkey;\r\n","import React from \"react\";\r\n\r\ninterface PropsTypes {\r\n  moviesPages: number[];\r\n  currentPage: number;\r\n  setCurrentPage: (page: number) => void;\r\n}\r\n\r\nconst Pagination: React.FC<PropsTypes> = ({moviesPages, currentPage, setCurrentPage}) => {\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        className={\r\n          currentPage > 1\r\n            ? \"pagination__prev\"\r\n            : \"pagination__prev pagination__prev_disabled\"\r\n        }\r\n        onClick={() => setCurrentPage(--currentPage)}\r\n      >\r\n        Prev\r\n      </button>\r\n      {moviesPages\r\n        .slice(\r\n          currentPage > 1 ? currentPage - 2 : currentPage - 1,\r\n          currentPage > 1 ? currentPage + 1 : currentPage + 2\r\n        )\r\n        .map((page) => (\r\n          <button\r\n            key={page}\r\n            className={\r\n              page === currentPage\r\n                ? \"pagination__btn pagination__btn_active\"\r\n                : \"pagination__btn\"\r\n            }\r\n            onClick={() => setCurrentPage(page)}\r\n          >\r\n            {page}\r\n          </button>\r\n        ))}\r\n      <button\r\n        className={\r\n          currentPage < moviesPages.length\r\n            ? \"pagination__next\"\r\n            : \"pagination__next pagination__next_disabled\"\r\n        }\r\n        onClick={() => setCurrentPage(++currentPage)}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Movies from \"./components/Movies\";\nimport axios from \"axios\";\nimport movieAPIkey from \"./movieConfig\";\nimport Pagination from \"./components/Pagination\";\n\nconst App: React.FC = () => {\n  const [genreFilterId, setGenreFilterId] = useState<number | false>(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genresList, setGenresList] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [moviesPagesValue, setMoviesPagesValue] = useState(0);\n  const [error, setError] = useState<string | false>(false);\n  const moviesPages: number[] = [];\n\n  useEffect(() => {\n    const getGenres = async () => {\n      setError(false);\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${movieAPIkey}&language=en-US`)\n        setGenresList(response.data.genres);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    getGenres();\n  }, []);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setError(false);\n      const genreFilterIdValue = genreFilterId\n        ? `&with_genres=${genreFilterId}`\n        : \"\";\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${movieAPIkey}&language=en-US&sort_by=primary_release_date.desc&page=${currentPage}${genreFilterIdValue}`)\n        setMovies(response.data.results);\n        setMoviesPagesValue(response.data.total_pages);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMovies();\n  }, [currentPage, genreFilterId]);\n\n  for (let i = 1; i <= moviesPagesValue; i++) moviesPages.push(i);\n\n  if (error) return <p>{error}</p>;\n\n  return (\n    <>\n      <Filter\n        genresList={genresList}\n        setGenreFilterId={setGenreFilterId}\n        setCurrentPage={setCurrentPage}\n      />\n      <Movies\n        movies={movies}\n        genresList={genresList}\n      />\n      {moviesPages.length > 1 && (\n        <Pagination\n          moviesPages={moviesPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}