{"version":3,"sources":["components/Filter.tsx","components/Movies.tsx","movieConfig.ts","components/Pagination.tsx","App.tsx","index.tsx"],"names":["Filter","genresList","setGenreFilterId","setCurrentPage","useState","filterByValue","setFilterByValue","showSortDropDown","setShowSortDropDown","filterValueRef","useRef","clearSortRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","onClick","map","genre","index","filter","genreObj","name","id","onSortByItemClick","Movies","movies","movie","title","poster_path","release_date","genre_ids","length","slice","src","alt","includes","movieAPIkey","Pagination","moviesPages","currentPage","page","App","genreFilterId","setGenresList","setMovies","moviesPagesValue","setMoviesPagesValue","isLoading","setIsLoading","error","setError","axios","get","then","response","data","genres","a","genreFilterIdValue","results","total_pages","message","getData","i","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f0798d1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\ninterface propsTypes {\n  genresList: { id: number; name: string }[];\n  setGenreFilterId: (id: number | false) => void;\n  setCurrentPage: (page: number) => void;\n}\n\nconst Filter: React.FC<propsTypes> = ({\n  genresList,\n  setGenreFilterId,\n  setCurrentPage,\n}) => {\n  const filterByList = [\"Thriller\", \"Action\", \"Comedy\", \"Adventure\"];\n  const [filterByValue, setFilterByValue] = useState<boolean | string>(false);\n  const [showSortDropDown, setShowSortDropDown] = useState(false);\n  const filterValueRef = useRef<HTMLDivElement>(null);\n  const clearSortRef = useRef<HTMLDivElement>(null);\n\n  const onSortByItemClick = (genre: string | false) => {\n    setCurrentPage(1);\n    setFilterByValue(genre);\n    setShowSortDropDown(false);\n    setGenreFilterId(\n      genresList.filter((genreObj) => genreObj.name === genre)[0].id\n    );\n  };\n\n  const showSortDropDownFunc = () => {\n    setShowSortDropDown(!showSortDropDown);\n  };\n\n  const clearSort = () => {\n    setCurrentPage(1);\n    setFilterByValue(false);\n    setGenreFilterId(false);\n  };\n\n  const clickOnSortValue = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    clearSortRef.current && clearSortRef.current.contains(event.target as Node)\n      ? clearSort()\n      : showSortDropDownFunc();\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (filterValueRef.current)\n        !filterValueRef.current.contains(event.target as Node) &&\n          showSortDropDown &&\n          setShowSortDropDown(false);\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, [showSortDropDown]);\n\n  return (\n    <div className=\"sort-wrap\">\n      <div className=\"sort\">\n        <div\n          className=\"sort__value\"\n          ref={filterValueRef}\n          onClick={clickOnSortValue}\n        >\n          <span>{filterByValue ? filterByValue : \"Genres\"}</span>\n          {filterByValue && (\n            <div className=\"sort__clear\" ref={clearSortRef}>\n              <div></div>\n              <div></div>\n            </div>\n          )}\n        </div>\n        {showSortDropDown && (\n          <ul className=\"sort__dropdown\">\n            {filterByList.map((genre, index) => (\n              <li key={genre + index} onClick={() => onSortByItemClick(genre)}>\n                {genre}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\ninterface PropsTypes {\n  movies: Array<any>;\n  genresList: { id: number; name: string }[];\n}\n\nconst Movies: React.FC<PropsTypes> = ({ movies, genresList }) => {\n  const prePathPoster = \"http://image.tmdb.org/t/p/w92\";\n\n  return (\n    <ul className=\"movies-ul\">\n      {movies\n        .filter(\n          (movie) =>\n            movie.title &&\n            movie.poster_path &&\n            movie.release_date &&\n            movie.genre_ids.length\n        )\n        .slice(0, 10)\n        .map((movie, index) => {\n          return (\n            <li key={movie.title + index} className=\"movie\">\n              <div className=\"movie__poster-wrap\">\n                <img\n                  src={prePathPoster + movie.poster_path}\n                  alt=\"movie.title\"\n                />\n              </div>\n              <div className=\"movie__description\">\n                <h3 className=\"movie__title\">{movie.title}</h3>\n                <p className=\"movie__year\">{movie.release_date}</p>\n                <ul className=\"movie__genres\">\n                  {genresList\n                    .filter((genre) => movie.genre_ids.includes(genre.id))\n                    .map((genre) => (\n                      <li key={genre.name}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Movies;\n","const movieAPIkey = \"482937fab99813d247db7ea317c5217e\";\nexport default movieAPIkey;\n","import React from \"react\";\n\ninterface PropsTypes {\n  moviesPages: number[];\n  currentPage: number;\n  setCurrentPage: (page: number) => void;\n}\n\nconst Pagination: React.FC<PropsTypes> = ({\n  moviesPages,\n  currentPage,\n  setCurrentPage,\n}) => {\n  return (\n    <div className=\"pagination\">\n      <button\n        className={\n          currentPage > 1\n            ? \"pagination__prev\"\n            : \"pagination__prev pagination__prev_disabled\"\n        }\n        onClick={() => setCurrentPage(--currentPage)}\n      >\n        Prev\n      </button>\n      {moviesPages\n        .slice(\n          currentPage > 1 ? currentPage - 2 : currentPage - 1,\n          currentPage > 1 ? currentPage + 1 : currentPage + 2\n        )\n        .map((page) => (\n          <button\n            key={page}\n            className={\n              page === currentPage\n                ? \"pagination__btn pagination__btn_active\"\n                : \"pagination__btn\"\n            }\n            onClick={() => setCurrentPage(page)}\n          >\n            {page}\n          </button>\n        ))}\n      <button\n        className={\n          currentPage < moviesPages.length\n            ? \"pagination__next\"\n            : \"pagination__next pagination__next_disabled\"\n        }\n        onClick={() => setCurrentPage(++currentPage)}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Movies from \"./components/Movies\";\nimport axios from \"axios\";\nimport movieAPIkey from \"./movieConfig\";\nimport Pagination from \"./components/Pagination\";\n\nconst App: React.FC = () => {\n  const [genreFilterId, setGenreFilterId] = useState<number | false>(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genresList, setGenresList] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [moviesPagesValue, setMoviesPagesValue] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | false>(false);\n  const moviesPages: number[] = [];\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${movieAPIkey}&language=en-US`\n      )\n      .then((response) => setGenresList(response.data.genres));\n  }, []);\n\n  useEffect(() => {\n    const getData = async () => {\n      setError(false);\n      setIsLoading(true);\n      const genreFilterIdValue = genreFilterId\n        ? `&with_genres=${genreFilterId}`\n        : \"\";\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${movieAPIkey}&language=en-US&sort_by=primary_release_date.desc&page=${currentPage}${genreFilterIdValue}`\n        );\n        setMovies(response.data.results);\n        setMoviesPagesValue(response.data.total_pages);\n      } catch (error) {\n        setError(error.message);\n      }\n      setIsLoading(false);\n    };\n    getData();\n  }, [currentPage, genreFilterId]);\n\n  for (let i = 1; i <= moviesPagesValue; i++) moviesPages.push(i);\n\n  if (isLoading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n  if (!movies.length) return <p>No movies found</p>;\n\n  return (\n    <>\n      <Filter\n        genresList={genresList}\n        setGenreFilterId={setGenreFilterId}\n        setCurrentPage={setCurrentPage}\n      />\n      <Movies movies={movies} genresList={genresList} />\n      {moviesPages.length > 1 && (\n        <Pagination\n          moviesPages={moviesPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}